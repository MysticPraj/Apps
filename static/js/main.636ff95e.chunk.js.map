{"version":3,"sources":["Components/Container/CardComponent.js","Components/Container/ResultContainer.js","Components/DND/ItemTypes.js","Components/DND/Dustbin.js","Components/DND/Box.js","Components/DND/Containerdnd.js","Components/DND/DragNDrop.js","App/logo.svg","Components/SearchBar/SearchBar.js","App/App.js","reportWebVitals.js","index.js"],"names":["CardComponent","props","image","useState","visibility","setVisibility","Card","raised","Content","Header","Button","color","labelPosition","circular","inverted","label","Label","alt_description","icon","onClick","href","urls","small","Image","fluid","src","wrapped","ui","Meta","className","created_at","slice","Description","description","extra","Icon","name","likes","basic","ResultContainer","result","passValue","length","Group","centered","stackable","map","ItemTypes","style","height","width","marginRight","marginBottom","padding","textAlign","fontSize","lineHeight","float","DropTarget","drop","connect","monitor","connectDropTarget","dropTarget","isOver","canDrop","isActive","backgroundColor","ref","role","border","cursor","DragSource","beginDrag","endDrag","item","getItem","dropResult","getDropResult","alert","connectDragSource","dragSource","isDragging","opacity","data-testid","rowStyle","overflow","clear","Container","Component","SearchBar","setImage","setResult","url","handleSubmit","event","axios","get","then","res","data","callValue","results","applogo","alt","Search","loading","size","onSearchChange","target","value","showNoResults","onKeyDown","e","keyCode","console","log","key","submitByEnter","placeholder","total","App","imageResult","setImageResult","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.636ff95e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Button, Card, Icon, Image, Label } from 'semantic-ui-react'\r\n\r\n\r\nfunction CardComponent(props) {\r\n\r\n    const image = props.image \r\n    const [visibility,setVisibility] = useState(true)\r\n\r\n    return (\r\n        <div>\r\n            {visibility?(<Card raised={true}>\r\n                <Card.Content>\r\n                  <Card.Header>\r\n                    <Button color=\"blue\" \r\n                            labelPosition={'left'} \r\n                            circular \r\n                            inverted \r\n                            label={<Label>{image.alt_description}</Label>} \r\n                            icon='close' onClick={()=>setVisibility(!visibility)}/></Card.Header>\r\n                  <Card.Header href={image.urls.small}><Image fluid src={image.urls.small} wrapped ui={true}/></Card.Header>\r\n                  <Card.Meta>\r\n                    <span className='date'>created at {image.created_at.slice(0, 10)}</span>\r\n                  </Card.Meta>\r\n                  <Card.Description>\r\n                  \r\n                      {image.description||image.alt_description}\r\n                  </Card.Description>\r\n                </Card.Content>\r\n                <Card.Content extra>\r\n                <Icon name='thumbs up outline'/>{(image.likes&&(`${image.likes} likes`))}\r\n                </Card.Content>\r\n                <Card.Content extra>\r\n                <div className='ui two buttons'>\r\n                <Button color='green' labelPosition='left'>\r\n                <Label basic color='green'>\r\n                <Icon color='green' name='check'/>\r\n                Approve</Label> \r\n                </Button>\r\n                <Button color='red' labelPosition='left'>\r\n                <Label basic color='red'>\r\n                <Icon color='red' name='times'/>\r\n                Decline</Label> \r\n                </Button>\r\n                </div>\r\n                </Card.Content>\r\n              </Card>):''}\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardComponent","import React from 'react'\r\nimport { Card } from 'semantic-ui-react'\r\nimport CardComponent from './CardComponent'\r\n\r\nfunction ResultContainer(props) {\r\n\r\n    const result = props.passValue\r\n\r\n    return (\r\n        <div>\r\n            <p>Result Length : {result.length}</p>\r\n            <Card.Group centered stackable>\r\n            { result.map((image) => (\r\n                <div>\r\n                    <CardComponent image={image}/>\r\n                </div>\r\n            )) } \r\n            </Card.Group>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultContainer\r\n\r\n\r\n","export const ItemTypes = {\r\n    BOX: 'box',\r\n  }\r\n  ","import { DropTarget } from 'react-dnd';\r\nimport { ItemTypes } from './ItemTypes';\r\nconst style = {\r\n    height: '12rem',\r\n    width: '12rem',\r\n    marginRight: '1.5rem',\r\n    marginBottom: '1.5rem',\r\n    color: 'white',\r\n    padding: '1rem',\r\n    textAlign: 'center',\r\n    fontSize: '1rem',\r\n    lineHeight: 'normal',\r\n    float: 'left',\r\n};\r\nconst Dustbin = ({ canDrop, isOver, connectDropTarget }) => {\r\n    const isActive = canDrop && isOver;\r\n    let backgroundColor = '#222';\r\n    if (isActive) {\r\n        backgroundColor = 'darkgreen';\r\n    }\r\n    else if (canDrop) {\r\n        backgroundColor = 'darkkhaki';\r\n    }\r\n    return (<div ref={connectDropTarget} style={{ ...style, backgroundColor }} role=\"Dustbin\">\r\n\t\t\t{isActive ? 'Release to drop' : 'Drag a box here'}\r\n\t\t</div>);\r\n};\r\nexport default DropTarget(ItemTypes.BOX, {\r\n    drop: () => ({ name: 'Dustbin' }),\r\n}, (connect, monitor) => ({\r\n    connectDropTarget: connect.dropTarget(),\r\n    isOver: monitor.isOver(),\r\n    canDrop: monitor.canDrop(),\r\n}))(Dustbin);","import { ItemTypes } from './ItemTypes';\r\nimport { DragSource } from 'react-dnd';\r\nconst style = {\r\n    border: '1px dashed gray',\r\n    backgroundColor: 'white',\r\n    padding: '0.5rem 1rem',\r\n    marginRight: '1.5rem',\r\n    marginBottom: '1.5rem',\r\n    cursor: 'move',\r\n    float: 'left',\r\n};\r\nconst Box = ({ name, isDragging, connectDragSource }) => {\r\n    const opacity = isDragging ? 0.2 : 1;\r\n    return (<div ref={connectDragSource} role={'Box'} data-testid={`box-${name}`} style={{ ...style, opacity }}>\r\n\t\t\t{name}\r\n\t\t</div>);\r\n};\r\nexport default DragSource(ItemTypes.BOX, {\r\n    beginDrag: (props) => {\r\n        return { name: props.name };\r\n    },\r\n    endDrag(props, monitor) {\r\n        const item = monitor.getItem();\r\n        const dropResult = monitor.getDropResult();\r\n        if (dropResult) {\r\n            alert(`You dropped ${item.name} into ${dropResult.name}!`);\r\n        }\r\n    },\r\n}, (connect, monitor) => {\r\n    return {\r\n        connectDragSource: connect.dragSource(),\r\n        isDragging: monitor.isDragging(),\r\n    };\r\n})(Box);\r\n","import Dustbin from './Dustbin';\r\nimport Box from './Box';\r\nconst rowStyle = { overflow: 'hidden', clear: 'both' };\r\nexport const Container = () => (<div>\r\n\t\t<div style={rowStyle}>\r\n\t\t\t<Dustbin />\r\n\t\t</div>\r\n\t\t<div style={rowStyle}>\r\n\t\t\t<Box name=\"Glass\"/>\r\n\t\t\t<Box name=\"Banana\"/>\r\n\t\t\t<Box name=\"Paper\"/>\r\n\t\t</div>\r\n\t</div>);","import React,{Component} from 'react'\r\nimport { DndProvider } from 'react-dnd'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\n// import { Button } from 'semantic-ui-react'\r\nimport Example from './Examples'\r\n\r\nexport class DragNDrop extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <DndProvider backend={HTML5Backend}>\r\n                 <Example />\r\n             </DndProvider>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DragNDrop\r\n\r\n// function DragNDrop() {\r\n//     return (\r\n//         <div>\r\n//             <DndProvider backend={HTML5Backend}>\r\n//                 <Example />\r\n//             </DndProvider>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default DragNDrop\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Search,Image, Button, Container } from 'semantic-ui-react'\r\nimport applogo from '../../App/logo.svg'\r\n\r\nfunction SearchBar(props) {\r\n\r\n    const [image,setImage] = useState('')\r\n    const [result,setResult] = useState([])\r\n\r\n    const clientId = '0BBtybJEtCPVVR_ZIe1SVNdDQx7PTxSAdUHFRVLYLhs'\r\n\r\n    const url = `https://api.unsplash.com/search/photos/?query=${image}&client_id=${clientId}`\r\n    \r\n    function handleChange(event) {\r\n        setImage(event.target.value)\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        // console.log(url)\r\n        axios.get(url)\r\n        .then((res)=>{\r\n            setResult(res.data)\r\n            props.callValue(res.data.results)\r\n        },[result])\r\n    }\r\n\r\n    function submitByEnter(e){\r\n            if(e.keyCode===13){\r\n                console.log(e.key)\r\n                handleSubmit(e)\r\n            }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <Container fluid={true} width={200}>\r\n            <Image circular centered src={applogo} alt='app-logo' width={300} />\r\n            {/* <input type=\"text\" placeholder=\"Search Images... \" onChange={handleChange} />\r\n            <button type=\"submit\" onClick={handleSubmit}> Search </button> */}\r\n            <Search loading={false} size='medium' fluid={true} onSearchChange={handleChange} showNoResults={false} onKeyDown={e=>submitByEnter(e)} placeholder=\"Search...\"/>\r\n            <Button onClick={handleSubmit} color='blue' >Search</Button>\r\n            { image ? (<p>Image Text : {image}</p>) : ''}\r\n            { result.total ? (<p>total : {result.total} </p>) : ''}\r\n            {/* <Grid celled={true} divided={true}>\r\n            { result.map((image) => (\r\n                    <Image src={image.urls.small}/>\r\n            )) } \r\n            </Grid> */}\r\n            </Container>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","import './App.css';\nimport ResultContainer from '../Components/Container/ResultContainer';\nimport DragNDrop from '../Components/DND/DragNDrop'\nimport SearchBar from '../Components/SearchBar/SearchBar';\nimport React,{useState} from 'react'\n\n\nfunction App() {\n\n  const [imageResult,setImageResult] = useState([])\n  const handleCallback = (image) => {\n    setImageResult(image)\n    console.log(image)\n}\n\n  return (\n    <div className=\"App\">\n      {/* Image Result : {imageResult.map(image=>(<p key={image.id}><a href={image.urls.small}>{image.alt_description}</a></p>))} */}\n      <SearchBar callValue = {handleCallback}/>\n      {imageResult.id ? <hr/> : ''}\n      <ResultContainer passValue={imageResult}/>\n      {/* <DragNDrop/> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport 'semantic-ui-css/semantic.min.css'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}